/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.lanxiang.springboot.thriftproxy.aftergen.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-07-24")
public class CinemaRelationRemoteService {

  public interface Iface {

    public TGetCinemaIdResponse getCinemaIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException;

    public TGetShopIdResponse getShopIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException;

    public TGetShopUUID2CinemaIdResponse getShopUUID2CinemaIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException;

    public TGetShopUUID2ShopIdResponse getShopUUID2ShopIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void getCinemaIdByShopUUID(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse> resultHandler) throws org.apache.thrift.TException;

    public void getShopIdByShopUUID(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse> resultHandler) throws org.apache.thrift.TException;

    public void getShopUUID2CinemaIdMapping(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse> resultHandler) throws org.apache.thrift.TException;

    public void getShopUUID2ShopIdMapping(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public TGetCinemaIdResponse getCinemaIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException
    {
      send_getCinemaIdByShopUUID(arg0);
      return recv_getCinemaIdByShopUUID();
    }

    public void send_getCinemaIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException
    {
      getCinemaIdByShopUUID_args args = new getCinemaIdByShopUUID_args();
      args.setArg0(arg0);
      sendBase("getCinemaIdByShopUUID", args);
    }

    public TGetCinemaIdResponse recv_getCinemaIdByShopUUID() throws org.apache.thrift.TException
    {
      getCinemaIdByShopUUID_result result = new getCinemaIdByShopUUID_result();
      receiveBase(result, "getCinemaIdByShopUUID");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getCinemaIdByShopUUID failed: unknown result");
    }

    public TGetShopIdResponse getShopIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException
    {
      send_getShopIdByShopUUID(arg0);
      return recv_getShopIdByShopUUID();
    }

    public void send_getShopIdByShopUUID(java.lang.String arg0) throws org.apache.thrift.TException
    {
      getShopIdByShopUUID_args args = new getShopIdByShopUUID_args();
      args.setArg0(arg0);
      sendBase("getShopIdByShopUUID", args);
    }

    public TGetShopIdResponse recv_getShopIdByShopUUID() throws org.apache.thrift.TException
    {
      getShopIdByShopUUID_result result = new getShopIdByShopUUID_result();
      receiveBase(result, "getShopIdByShopUUID");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getShopIdByShopUUID failed: unknown result");
    }

    public TGetShopUUID2CinemaIdResponse getShopUUID2CinemaIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException
    {
      send_getShopUUID2CinemaIdMapping(arg0);
      return recv_getShopUUID2CinemaIdMapping();
    }

    public void send_getShopUUID2CinemaIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException
    {
      getShopUUID2CinemaIdMapping_args args = new getShopUUID2CinemaIdMapping_args();
      args.setArg0(arg0);
      sendBase("getShopUUID2CinemaIdMapping", args);
    }

    public TGetShopUUID2CinemaIdResponse recv_getShopUUID2CinemaIdMapping() throws org.apache.thrift.TException
    {
      getShopUUID2CinemaIdMapping_result result = new getShopUUID2CinemaIdMapping_result();
      receiveBase(result, "getShopUUID2CinemaIdMapping");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getShopUUID2CinemaIdMapping failed: unknown result");
    }

    public TGetShopUUID2ShopIdResponse getShopUUID2ShopIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException
    {
      send_getShopUUID2ShopIdMapping(arg0);
      return recv_getShopUUID2ShopIdMapping();
    }

    public void send_getShopUUID2ShopIdMapping(java.util.Set<java.lang.String> arg0) throws org.apache.thrift.TException
    {
      getShopUUID2ShopIdMapping_args args = new getShopUUID2ShopIdMapping_args();
      args.setArg0(arg0);
      sendBase("getShopUUID2ShopIdMapping", args);
    }

    public TGetShopUUID2ShopIdResponse recv_getShopUUID2ShopIdMapping() throws org.apache.thrift.TException
    {
      getShopUUID2ShopIdMapping_result result = new getShopUUID2ShopIdMapping_result();
      receiveBase(result, "getShopUUID2ShopIdMapping");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getShopUUID2ShopIdMapping failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void getCinemaIdByShopUUID(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getCinemaIdByShopUUID_call method_call = new getCinemaIdByShopUUID_call(arg0, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getCinemaIdByShopUUID_call extends org.apache.thrift.async.TAsyncMethodCall<TGetCinemaIdResponse> {
      private java.lang.String arg0;
      public getCinemaIdByShopUUID_call(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.arg0 = arg0;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getCinemaIdByShopUUID", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getCinemaIdByShopUUID_args args = new getCinemaIdByShopUUID_args();
        args.setArg0(arg0);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TGetCinemaIdResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getCinemaIdByShopUUID();
      }
    }

    public void getShopIdByShopUUID(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getShopIdByShopUUID_call method_call = new getShopIdByShopUUID_call(arg0, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getShopIdByShopUUID_call extends org.apache.thrift.async.TAsyncMethodCall<TGetShopIdResponse> {
      private java.lang.String arg0;
      public getShopIdByShopUUID_call(java.lang.String arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.arg0 = arg0;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getShopIdByShopUUID", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getShopIdByShopUUID_args args = new getShopIdByShopUUID_args();
        args.setArg0(arg0);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TGetShopIdResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getShopIdByShopUUID();
      }
    }

    public void getShopUUID2CinemaIdMapping(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getShopUUID2CinemaIdMapping_call method_call = new getShopUUID2CinemaIdMapping_call(arg0, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getShopUUID2CinemaIdMapping_call extends org.apache.thrift.async.TAsyncMethodCall<TGetShopUUID2CinemaIdResponse> {
      private java.util.Set<java.lang.String> arg0;
      public getShopUUID2CinemaIdMapping_call(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.arg0 = arg0;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getShopUUID2CinemaIdMapping", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getShopUUID2CinemaIdMapping_args args = new getShopUUID2CinemaIdMapping_args();
        args.setArg0(arg0);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TGetShopUUID2CinemaIdResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getShopUUID2CinemaIdMapping();
      }
    }

    public void getShopUUID2ShopIdMapping(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getShopUUID2ShopIdMapping_call method_call = new getShopUUID2ShopIdMapping_call(arg0, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getShopUUID2ShopIdMapping_call extends org.apache.thrift.async.TAsyncMethodCall<TGetShopUUID2ShopIdResponse> {
      private java.util.Set<java.lang.String> arg0;
      public getShopUUID2ShopIdMapping_call(java.util.Set<java.lang.String> arg0, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.arg0 = arg0;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getShopUUID2ShopIdMapping", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getShopUUID2ShopIdMapping_args args = new getShopUUID2ShopIdMapping_args();
        args.setArg0(arg0);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TGetShopUUID2ShopIdResponse getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getShopUUID2ShopIdMapping();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("getCinemaIdByShopUUID", new getCinemaIdByShopUUID());
      processMap.put("getShopIdByShopUUID", new getShopIdByShopUUID());
      processMap.put("getShopUUID2CinemaIdMapping", new getShopUUID2CinemaIdMapping());
      processMap.put("getShopUUID2ShopIdMapping", new getShopUUID2ShopIdMapping());
      return processMap;
    }

    public static class getCinemaIdByShopUUID<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getCinemaIdByShopUUID_args> {
      public getCinemaIdByShopUUID() {
        super("getCinemaIdByShopUUID");
      }

      public getCinemaIdByShopUUID_args getEmptyArgsInstance() {
        return new getCinemaIdByShopUUID_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getCinemaIdByShopUUID_result getResult(I iface, getCinemaIdByShopUUID_args args) throws org.apache.thrift.TException {
        getCinemaIdByShopUUID_result result = new getCinemaIdByShopUUID_result();
        result.success = iface.getCinemaIdByShopUUID(args.arg0);
        return result;
      }
    }

    public static class getShopIdByShopUUID<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getShopIdByShopUUID_args> {
      public getShopIdByShopUUID() {
        super("getShopIdByShopUUID");
      }

      public getShopIdByShopUUID_args getEmptyArgsInstance() {
        return new getShopIdByShopUUID_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getShopIdByShopUUID_result getResult(I iface, getShopIdByShopUUID_args args) throws org.apache.thrift.TException {
        getShopIdByShopUUID_result result = new getShopIdByShopUUID_result();
        result.success = iface.getShopIdByShopUUID(args.arg0);
        return result;
      }
    }

    public static class getShopUUID2CinemaIdMapping<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getShopUUID2CinemaIdMapping_args> {
      public getShopUUID2CinemaIdMapping() {
        super("getShopUUID2CinemaIdMapping");
      }

      public getShopUUID2CinemaIdMapping_args getEmptyArgsInstance() {
        return new getShopUUID2CinemaIdMapping_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getShopUUID2CinemaIdMapping_result getResult(I iface, getShopUUID2CinemaIdMapping_args args) throws org.apache.thrift.TException {
        getShopUUID2CinemaIdMapping_result result = new getShopUUID2CinemaIdMapping_result();
        result.success = iface.getShopUUID2CinemaIdMapping(args.arg0);
        return result;
      }
    }

    public static class getShopUUID2ShopIdMapping<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getShopUUID2ShopIdMapping_args> {
      public getShopUUID2ShopIdMapping() {
        super("getShopUUID2ShopIdMapping");
      }

      public getShopUUID2ShopIdMapping_args getEmptyArgsInstance() {
        return new getShopUUID2ShopIdMapping_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getShopUUID2ShopIdMapping_result getResult(I iface, getShopUUID2ShopIdMapping_args args) throws org.apache.thrift.TException {
        getShopUUID2ShopIdMapping_result result = new getShopUUID2ShopIdMapping_result();
        result.success = iface.getShopUUID2ShopIdMapping(args.arg0);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("getCinemaIdByShopUUID", new getCinemaIdByShopUUID());
      processMap.put("getShopIdByShopUUID", new getShopIdByShopUUID());
      processMap.put("getShopUUID2CinemaIdMapping", new getShopUUID2CinemaIdMapping());
      processMap.put("getShopUUID2ShopIdMapping", new getShopUUID2ShopIdMapping());
      return processMap;
    }

    public static class getCinemaIdByShopUUID<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getCinemaIdByShopUUID_args, TGetCinemaIdResponse> {
      public getCinemaIdByShopUUID() {
        super("getCinemaIdByShopUUID");
      }

      public getCinemaIdByShopUUID_args getEmptyArgsInstance() {
        return new getCinemaIdByShopUUID_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse>() { 
          public void onComplete(TGetCinemaIdResponse o) {
            getCinemaIdByShopUUID_result result = new getCinemaIdByShopUUID_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getCinemaIdByShopUUID_result result = new getCinemaIdByShopUUID_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getCinemaIdByShopUUID_args args, org.apache.thrift.async.AsyncMethodCallback<TGetCinemaIdResponse> resultHandler) throws org.apache.thrift.TException {
        iface.getCinemaIdByShopUUID(args.arg0,resultHandler);
      }
    }

    public static class getShopIdByShopUUID<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getShopIdByShopUUID_args, TGetShopIdResponse> {
      public getShopIdByShopUUID() {
        super("getShopIdByShopUUID");
      }

      public getShopIdByShopUUID_args getEmptyArgsInstance() {
        return new getShopIdByShopUUID_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse>() { 
          public void onComplete(TGetShopIdResponse o) {
            getShopIdByShopUUID_result result = new getShopIdByShopUUID_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getShopIdByShopUUID_result result = new getShopIdByShopUUID_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getShopIdByShopUUID_args args, org.apache.thrift.async.AsyncMethodCallback<TGetShopIdResponse> resultHandler) throws org.apache.thrift.TException {
        iface.getShopIdByShopUUID(args.arg0,resultHandler);
      }
    }

    public static class getShopUUID2CinemaIdMapping<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getShopUUID2CinemaIdMapping_args, TGetShopUUID2CinemaIdResponse> {
      public getShopUUID2CinemaIdMapping() {
        super("getShopUUID2CinemaIdMapping");
      }

      public getShopUUID2CinemaIdMapping_args getEmptyArgsInstance() {
        return new getShopUUID2CinemaIdMapping_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse>() { 
          public void onComplete(TGetShopUUID2CinemaIdResponse o) {
            getShopUUID2CinemaIdMapping_result result = new getShopUUID2CinemaIdMapping_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getShopUUID2CinemaIdMapping_result result = new getShopUUID2CinemaIdMapping_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getShopUUID2CinemaIdMapping_args args, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2CinemaIdResponse> resultHandler) throws org.apache.thrift.TException {
        iface.getShopUUID2CinemaIdMapping(args.arg0,resultHandler);
      }
    }

    public static class getShopUUID2ShopIdMapping<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getShopUUID2ShopIdMapping_args, TGetShopUUID2ShopIdResponse> {
      public getShopUUID2ShopIdMapping() {
        super("getShopUUID2ShopIdMapping");
      }

      public getShopUUID2ShopIdMapping_args getEmptyArgsInstance() {
        return new getShopUUID2ShopIdMapping_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse>() { 
          public void onComplete(TGetShopUUID2ShopIdResponse o) {
            getShopUUID2ShopIdMapping_result result = new getShopUUID2ShopIdMapping_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getShopUUID2ShopIdMapping_result result = new getShopUUID2ShopIdMapping_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getShopUUID2ShopIdMapping_args args, org.apache.thrift.async.AsyncMethodCallback<TGetShopUUID2ShopIdResponse> resultHandler) throws org.apache.thrift.TException {
        iface.getShopUUID2ShopIdMapping(args.arg0,resultHandler);
      }
    }

  }

  public static class getCinemaIdByShopUUID_args implements org.apache.thrift.TBase<getCinemaIdByShopUUID_args, getCinemaIdByShopUUID_args._Fields>, java.io.Serializable, Cloneable, Comparable<getCinemaIdByShopUUID_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCinemaIdByShopUUID_args");

    private static final org.apache.thrift.protocol.TField ARG0_FIELD_DESC = new org.apache.thrift.protocol.TField("arg0", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCinemaIdByShopUUID_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCinemaIdByShopUUID_argsTupleSchemeFactory();

    public java.lang.String arg0; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ARG0((short)1, "arg0");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ARG0
            return ARG0;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ARG0, new org.apache.thrift.meta_data.FieldMetaData("arg0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCinemaIdByShopUUID_args.class, metaDataMap);
    }

    public getCinemaIdByShopUUID_args() {
    }

    public getCinemaIdByShopUUID_args(
      java.lang.String arg0)
    {
      this();
      this.arg0 = arg0;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCinemaIdByShopUUID_args(getCinemaIdByShopUUID_args other) {
      if (other.isSetArg0()) {
        this.arg0 = other.arg0;
      }
    }

    public getCinemaIdByShopUUID_args deepCopy() {
      return new getCinemaIdByShopUUID_args(this);
    }

    @Override
    public void clear() {
      this.arg0 = null;
    }

    public java.lang.String getArg0() {
      return this.arg0;
    }

    public getCinemaIdByShopUUID_args setArg0(java.lang.String arg0) {
      this.arg0 = arg0;
      return this;
    }

    public void unsetArg0() {
      this.arg0 = null;
    }

    /** Returns true if field arg0 is set (has been assigned a value) and false otherwise */
    public boolean isSetArg0() {
      return this.arg0 != null;
    }

    public void setArg0IsSet(boolean value) {
      if (!value) {
        this.arg0 = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ARG0:
        if (value == null) {
          unsetArg0();
        } else {
          setArg0((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ARG0:
        return getArg0();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ARG0:
        return isSetArg0();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getCinemaIdByShopUUID_args)
        return this.equals((getCinemaIdByShopUUID_args)that);
      return false;
    }

    public boolean equals(getCinemaIdByShopUUID_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_arg0 = true && this.isSetArg0();
      boolean that_present_arg0 = true && that.isSetArg0();
      if (this_present_arg0 || that_present_arg0) {
        if (!(this_present_arg0 && that_present_arg0))
          return false;
        if (!this.arg0.equals(that.arg0))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetArg0()) ? 131071 : 524287);
      if (isSetArg0())
        hashCode = hashCode * 8191 + arg0.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getCinemaIdByShopUUID_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetArg0()).compareTo(other.isSetArg0());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetArg0()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.arg0, other.arg0);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getCinemaIdByShopUUID_args(");
      boolean first = true;

      sb.append("arg0:");
      if (this.arg0 == null) {
        sb.append("null");
      } else {
        sb.append(this.arg0);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCinemaIdByShopUUID_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCinemaIdByShopUUID_argsStandardScheme getScheme() {
        return new getCinemaIdByShopUUID_argsStandardScheme();
      }
    }

    private static class getCinemaIdByShopUUID_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCinemaIdByShopUUID_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCinemaIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ARG0
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.arg0 = iprot.readString();
                struct.setArg0IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCinemaIdByShopUUID_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.arg0 != null) {
          oprot.writeFieldBegin(ARG0_FIELD_DESC);
          oprot.writeString(struct.arg0);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCinemaIdByShopUUID_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCinemaIdByShopUUID_argsTupleScheme getScheme() {
        return new getCinemaIdByShopUUID_argsTupleScheme();
      }
    }

    private static class getCinemaIdByShopUUID_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCinemaIdByShopUUID_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCinemaIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetArg0()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetArg0()) {
          oprot.writeString(struct.arg0);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCinemaIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.arg0 = iprot.readString();
          struct.setArg0IsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getCinemaIdByShopUUID_result implements org.apache.thrift.TBase<getCinemaIdByShopUUID_result, getCinemaIdByShopUUID_result._Fields>, java.io.Serializable, Cloneable, Comparable<getCinemaIdByShopUUID_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCinemaIdByShopUUID_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCinemaIdByShopUUID_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCinemaIdByShopUUID_resultTupleSchemeFactory();

    public TGetCinemaIdResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TGetCinemaIdResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCinemaIdByShopUUID_result.class, metaDataMap);
    }

    public getCinemaIdByShopUUID_result() {
    }

    public getCinemaIdByShopUUID_result(
      TGetCinemaIdResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCinemaIdByShopUUID_result(getCinemaIdByShopUUID_result other) {
      if (other.isSetSuccess()) {
        this.success = new TGetCinemaIdResponse(other.success);
      }
    }

    public getCinemaIdByShopUUID_result deepCopy() {
      return new getCinemaIdByShopUUID_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TGetCinemaIdResponse getSuccess() {
      return this.success;
    }

    public getCinemaIdByShopUUID_result setSuccess(TGetCinemaIdResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TGetCinemaIdResponse)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getCinemaIdByShopUUID_result)
        return this.equals((getCinemaIdByShopUUID_result)that);
      return false;
    }

    public boolean equals(getCinemaIdByShopUUID_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getCinemaIdByShopUUID_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getCinemaIdByShopUUID_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCinemaIdByShopUUID_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCinemaIdByShopUUID_resultStandardScheme getScheme() {
        return new getCinemaIdByShopUUID_resultStandardScheme();
      }
    }

    private static class getCinemaIdByShopUUID_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCinemaIdByShopUUID_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCinemaIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TGetCinemaIdResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCinemaIdByShopUUID_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCinemaIdByShopUUID_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCinemaIdByShopUUID_resultTupleScheme getScheme() {
        return new getCinemaIdByShopUUID_resultTupleScheme();
      }
    }

    private static class getCinemaIdByShopUUID_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCinemaIdByShopUUID_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCinemaIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCinemaIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TGetCinemaIdResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopIdByShopUUID_args implements org.apache.thrift.TBase<getShopIdByShopUUID_args, getShopIdByShopUUID_args._Fields>, java.io.Serializable, Cloneable, Comparable<getShopIdByShopUUID_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopIdByShopUUID_args");

    private static final org.apache.thrift.protocol.TField ARG0_FIELD_DESC = new org.apache.thrift.protocol.TField("arg0", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopIdByShopUUID_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopIdByShopUUID_argsTupleSchemeFactory();

    public java.lang.String arg0; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ARG0((short)1, "arg0");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ARG0
            return ARG0;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ARG0, new org.apache.thrift.meta_data.FieldMetaData("arg0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopIdByShopUUID_args.class, metaDataMap);
    }

    public getShopIdByShopUUID_args() {
    }

    public getShopIdByShopUUID_args(
      java.lang.String arg0)
    {
      this();
      this.arg0 = arg0;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopIdByShopUUID_args(getShopIdByShopUUID_args other) {
      if (other.isSetArg0()) {
        this.arg0 = other.arg0;
      }
    }

    public getShopIdByShopUUID_args deepCopy() {
      return new getShopIdByShopUUID_args(this);
    }

    @Override
    public void clear() {
      this.arg0 = null;
    }

    public java.lang.String getArg0() {
      return this.arg0;
    }

    public getShopIdByShopUUID_args setArg0(java.lang.String arg0) {
      this.arg0 = arg0;
      return this;
    }

    public void unsetArg0() {
      this.arg0 = null;
    }

    /** Returns true if field arg0 is set (has been assigned a value) and false otherwise */
    public boolean isSetArg0() {
      return this.arg0 != null;
    }

    public void setArg0IsSet(boolean value) {
      if (!value) {
        this.arg0 = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ARG0:
        if (value == null) {
          unsetArg0();
        } else {
          setArg0((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ARG0:
        return getArg0();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ARG0:
        return isSetArg0();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopIdByShopUUID_args)
        return this.equals((getShopIdByShopUUID_args)that);
      return false;
    }

    public boolean equals(getShopIdByShopUUID_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_arg0 = true && this.isSetArg0();
      boolean that_present_arg0 = true && that.isSetArg0();
      if (this_present_arg0 || that_present_arg0) {
        if (!(this_present_arg0 && that_present_arg0))
          return false;
        if (!this.arg0.equals(that.arg0))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetArg0()) ? 131071 : 524287);
      if (isSetArg0())
        hashCode = hashCode * 8191 + arg0.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopIdByShopUUID_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetArg0()).compareTo(other.isSetArg0());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetArg0()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.arg0, other.arg0);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopIdByShopUUID_args(");
      boolean first = true;

      sb.append("arg0:");
      if (this.arg0 == null) {
        sb.append("null");
      } else {
        sb.append(this.arg0);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopIdByShopUUID_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopIdByShopUUID_argsStandardScheme getScheme() {
        return new getShopIdByShopUUID_argsStandardScheme();
      }
    }

    private static class getShopIdByShopUUID_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopIdByShopUUID_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ARG0
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.arg0 = iprot.readString();
                struct.setArg0IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopIdByShopUUID_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.arg0 != null) {
          oprot.writeFieldBegin(ARG0_FIELD_DESC);
          oprot.writeString(struct.arg0);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopIdByShopUUID_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopIdByShopUUID_argsTupleScheme getScheme() {
        return new getShopIdByShopUUID_argsTupleScheme();
      }
    }

    private static class getShopIdByShopUUID_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopIdByShopUUID_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetArg0()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetArg0()) {
          oprot.writeString(struct.arg0);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopIdByShopUUID_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.arg0 = iprot.readString();
          struct.setArg0IsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopIdByShopUUID_result implements org.apache.thrift.TBase<getShopIdByShopUUID_result, getShopIdByShopUUID_result._Fields>, java.io.Serializable, Cloneable, Comparable<getShopIdByShopUUID_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopIdByShopUUID_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopIdByShopUUID_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopIdByShopUUID_resultTupleSchemeFactory();

    public TGetShopIdResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TGetShopIdResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopIdByShopUUID_result.class, metaDataMap);
    }

    public getShopIdByShopUUID_result() {
    }

    public getShopIdByShopUUID_result(
      TGetShopIdResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopIdByShopUUID_result(getShopIdByShopUUID_result other) {
      if (other.isSetSuccess()) {
        this.success = new TGetShopIdResponse(other.success);
      }
    }

    public getShopIdByShopUUID_result deepCopy() {
      return new getShopIdByShopUUID_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TGetShopIdResponse getSuccess() {
      return this.success;
    }

    public getShopIdByShopUUID_result setSuccess(TGetShopIdResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TGetShopIdResponse)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopIdByShopUUID_result)
        return this.equals((getShopIdByShopUUID_result)that);
      return false;
    }

    public boolean equals(getShopIdByShopUUID_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopIdByShopUUID_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopIdByShopUUID_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopIdByShopUUID_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopIdByShopUUID_resultStandardScheme getScheme() {
        return new getShopIdByShopUUID_resultStandardScheme();
      }
    }

    private static class getShopIdByShopUUID_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopIdByShopUUID_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TGetShopIdResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopIdByShopUUID_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopIdByShopUUID_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopIdByShopUUID_resultTupleScheme getScheme() {
        return new getShopIdByShopUUID_resultTupleScheme();
      }
    }

    private static class getShopIdByShopUUID_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopIdByShopUUID_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopIdByShopUUID_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TGetShopIdResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopUUID2CinemaIdMapping_args implements org.apache.thrift.TBase<getShopUUID2CinemaIdMapping_args, getShopUUID2CinemaIdMapping_args._Fields>, java.io.Serializable, Cloneable, Comparable<getShopUUID2CinemaIdMapping_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopUUID2CinemaIdMapping_args");

    private static final org.apache.thrift.protocol.TField ARG0_FIELD_DESC = new org.apache.thrift.protocol.TField("arg0", org.apache.thrift.protocol.TType.SET, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopUUID2CinemaIdMapping_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopUUID2CinemaIdMapping_argsTupleSchemeFactory();

    public java.util.Set<java.lang.String> arg0; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ARG0((short)1, "arg0");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ARG0
            return ARG0;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ARG0, new org.apache.thrift.meta_data.FieldMetaData("arg0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopUUID2CinemaIdMapping_args.class, metaDataMap);
    }

    public getShopUUID2CinemaIdMapping_args() {
    }

    public getShopUUID2CinemaIdMapping_args(
      java.util.Set<java.lang.String> arg0)
    {
      this();
      this.arg0 = arg0;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopUUID2CinemaIdMapping_args(getShopUUID2CinemaIdMapping_args other) {
      if (other.isSetArg0()) {
        java.util.Set<java.lang.String> __this__arg0 = new java.util.HashSet<java.lang.String>(other.arg0);
        this.arg0 = __this__arg0;
      }
    }

    public getShopUUID2CinemaIdMapping_args deepCopy() {
      return new getShopUUID2CinemaIdMapping_args(this);
    }

    @Override
    public void clear() {
      this.arg0 = null;
    }

    public int getArg0Size() {
      return (this.arg0 == null) ? 0 : this.arg0.size();
    }

    public java.util.Iterator<java.lang.String> getArg0Iterator() {
      return (this.arg0 == null) ? null : this.arg0.iterator();
    }

    public void addToArg0(java.lang.String elem) {
      if (this.arg0 == null) {
        this.arg0 = new java.util.HashSet<java.lang.String>();
      }
      this.arg0.add(elem);
    }

    public java.util.Set<java.lang.String> getArg0() {
      return this.arg0;
    }

    public getShopUUID2CinemaIdMapping_args setArg0(java.util.Set<java.lang.String> arg0) {
      this.arg0 = arg0;
      return this;
    }

    public void unsetArg0() {
      this.arg0 = null;
    }

    /** Returns true if field arg0 is set (has been assigned a value) and false otherwise */
    public boolean isSetArg0() {
      return this.arg0 != null;
    }

    public void setArg0IsSet(boolean value) {
      if (!value) {
        this.arg0 = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ARG0:
        if (value == null) {
          unsetArg0();
        } else {
          setArg0((java.util.Set<java.lang.String>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ARG0:
        return getArg0();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ARG0:
        return isSetArg0();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopUUID2CinemaIdMapping_args)
        return this.equals((getShopUUID2CinemaIdMapping_args)that);
      return false;
    }

    public boolean equals(getShopUUID2CinemaIdMapping_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_arg0 = true && this.isSetArg0();
      boolean that_present_arg0 = true && that.isSetArg0();
      if (this_present_arg0 || that_present_arg0) {
        if (!(this_present_arg0 && that_present_arg0))
          return false;
        if (!this.arg0.equals(that.arg0))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetArg0()) ? 131071 : 524287);
      if (isSetArg0())
        hashCode = hashCode * 8191 + arg0.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopUUID2CinemaIdMapping_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetArg0()).compareTo(other.isSetArg0());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetArg0()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.arg0, other.arg0);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopUUID2CinemaIdMapping_args(");
      boolean first = true;

      sb.append("arg0:");
      if (this.arg0 == null) {
        sb.append("null");
      } else {
        sb.append(this.arg0);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopUUID2CinemaIdMapping_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2CinemaIdMapping_argsStandardScheme getScheme() {
        return new getShopUUID2CinemaIdMapping_argsStandardScheme();
      }
    }

    private static class getShopUUID2CinemaIdMapping_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopUUID2CinemaIdMapping_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopUUID2CinemaIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ARG0
              if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                {
                  org.apache.thrift.protocol.TSet _set20 = iprot.readSetBegin();
                  struct.arg0 = new java.util.HashSet<java.lang.String>(2*_set20.size);
                  java.lang.String _elem21;
                  for (int _i22 = 0; _i22 < _set20.size; ++_i22)
                  {
                    _elem21 = iprot.readString();
                    struct.arg0.add(_elem21);
                  }
                  iprot.readSetEnd();
                }
                struct.setArg0IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopUUID2CinemaIdMapping_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.arg0 != null) {
          oprot.writeFieldBegin(ARG0_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.arg0.size()));
            for (java.lang.String _iter23 : struct.arg0)
            {
              oprot.writeString(_iter23);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopUUID2CinemaIdMapping_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2CinemaIdMapping_argsTupleScheme getScheme() {
        return new getShopUUID2CinemaIdMapping_argsTupleScheme();
      }
    }

    private static class getShopUUID2CinemaIdMapping_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopUUID2CinemaIdMapping_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopUUID2CinemaIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetArg0()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetArg0()) {
          {
            oprot.writeI32(struct.arg0.size());
            for (java.lang.String _iter24 : struct.arg0)
            {
              oprot.writeString(_iter24);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopUUID2CinemaIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TSet _set25 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.arg0 = new java.util.HashSet<java.lang.String>(2*_set25.size);
            java.lang.String _elem26;
            for (int _i27 = 0; _i27 < _set25.size; ++_i27)
            {
              _elem26 = iprot.readString();
              struct.arg0.add(_elem26);
            }
          }
          struct.setArg0IsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopUUID2CinemaIdMapping_result implements org.apache.thrift.TBase<getShopUUID2CinemaIdMapping_result, getShopUUID2CinemaIdMapping_result._Fields>, java.io.Serializable, Cloneable, Comparable<getShopUUID2CinemaIdMapping_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopUUID2CinemaIdMapping_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopUUID2CinemaIdMapping_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopUUID2CinemaIdMapping_resultTupleSchemeFactory();

    public TGetShopUUID2CinemaIdResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TGetShopUUID2CinemaIdResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopUUID2CinemaIdMapping_result.class, metaDataMap);
    }

    public getShopUUID2CinemaIdMapping_result() {
    }

    public getShopUUID2CinemaIdMapping_result(
      TGetShopUUID2CinemaIdResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopUUID2CinemaIdMapping_result(getShopUUID2CinemaIdMapping_result other) {
      if (other.isSetSuccess()) {
        this.success = new TGetShopUUID2CinemaIdResponse(other.success);
      }
    }

    public getShopUUID2CinemaIdMapping_result deepCopy() {
      return new getShopUUID2CinemaIdMapping_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TGetShopUUID2CinemaIdResponse getSuccess() {
      return this.success;
    }

    public getShopUUID2CinemaIdMapping_result setSuccess(TGetShopUUID2CinemaIdResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TGetShopUUID2CinemaIdResponse)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopUUID2CinemaIdMapping_result)
        return this.equals((getShopUUID2CinemaIdMapping_result)that);
      return false;
    }

    public boolean equals(getShopUUID2CinemaIdMapping_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopUUID2CinemaIdMapping_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopUUID2CinemaIdMapping_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopUUID2CinemaIdMapping_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2CinemaIdMapping_resultStandardScheme getScheme() {
        return new getShopUUID2CinemaIdMapping_resultStandardScheme();
      }
    }

    private static class getShopUUID2CinemaIdMapping_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopUUID2CinemaIdMapping_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopUUID2CinemaIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TGetShopUUID2CinemaIdResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopUUID2CinemaIdMapping_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopUUID2CinemaIdMapping_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2CinemaIdMapping_resultTupleScheme getScheme() {
        return new getShopUUID2CinemaIdMapping_resultTupleScheme();
      }
    }

    private static class getShopUUID2CinemaIdMapping_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopUUID2CinemaIdMapping_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopUUID2CinemaIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopUUID2CinemaIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TGetShopUUID2CinemaIdResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopUUID2ShopIdMapping_args implements org.apache.thrift.TBase<getShopUUID2ShopIdMapping_args, getShopUUID2ShopIdMapping_args._Fields>, java.io.Serializable, Cloneable, Comparable<getShopUUID2ShopIdMapping_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopUUID2ShopIdMapping_args");

    private static final org.apache.thrift.protocol.TField ARG0_FIELD_DESC = new org.apache.thrift.protocol.TField("arg0", org.apache.thrift.protocol.TType.SET, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopUUID2ShopIdMapping_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopUUID2ShopIdMapping_argsTupleSchemeFactory();

    public java.util.Set<java.lang.String> arg0; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ARG0((short)1, "arg0");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ARG0
            return ARG0;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ARG0, new org.apache.thrift.meta_data.FieldMetaData("arg0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopUUID2ShopIdMapping_args.class, metaDataMap);
    }

    public getShopUUID2ShopIdMapping_args() {
    }

    public getShopUUID2ShopIdMapping_args(
      java.util.Set<java.lang.String> arg0)
    {
      this();
      this.arg0 = arg0;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopUUID2ShopIdMapping_args(getShopUUID2ShopIdMapping_args other) {
      if (other.isSetArg0()) {
        java.util.Set<java.lang.String> __this__arg0 = new java.util.HashSet<java.lang.String>(other.arg0);
        this.arg0 = __this__arg0;
      }
    }

    public getShopUUID2ShopIdMapping_args deepCopy() {
      return new getShopUUID2ShopIdMapping_args(this);
    }

    @Override
    public void clear() {
      this.arg0 = null;
    }

    public int getArg0Size() {
      return (this.arg0 == null) ? 0 : this.arg0.size();
    }

    public java.util.Iterator<java.lang.String> getArg0Iterator() {
      return (this.arg0 == null) ? null : this.arg0.iterator();
    }

    public void addToArg0(java.lang.String elem) {
      if (this.arg0 == null) {
        this.arg0 = new java.util.HashSet<java.lang.String>();
      }
      this.arg0.add(elem);
    }

    public java.util.Set<java.lang.String> getArg0() {
      return this.arg0;
    }

    public getShopUUID2ShopIdMapping_args setArg0(java.util.Set<java.lang.String> arg0) {
      this.arg0 = arg0;
      return this;
    }

    public void unsetArg0() {
      this.arg0 = null;
    }

    /** Returns true if field arg0 is set (has been assigned a value) and false otherwise */
    public boolean isSetArg0() {
      return this.arg0 != null;
    }

    public void setArg0IsSet(boolean value) {
      if (!value) {
        this.arg0 = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ARG0:
        if (value == null) {
          unsetArg0();
        } else {
          setArg0((java.util.Set<java.lang.String>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ARG0:
        return getArg0();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ARG0:
        return isSetArg0();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopUUID2ShopIdMapping_args)
        return this.equals((getShopUUID2ShopIdMapping_args)that);
      return false;
    }

    public boolean equals(getShopUUID2ShopIdMapping_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_arg0 = true && this.isSetArg0();
      boolean that_present_arg0 = true && that.isSetArg0();
      if (this_present_arg0 || that_present_arg0) {
        if (!(this_present_arg0 && that_present_arg0))
          return false;
        if (!this.arg0.equals(that.arg0))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetArg0()) ? 131071 : 524287);
      if (isSetArg0())
        hashCode = hashCode * 8191 + arg0.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopUUID2ShopIdMapping_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetArg0()).compareTo(other.isSetArg0());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetArg0()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.arg0, other.arg0);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopUUID2ShopIdMapping_args(");
      boolean first = true;

      sb.append("arg0:");
      if (this.arg0 == null) {
        sb.append("null");
      } else {
        sb.append(this.arg0);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopUUID2ShopIdMapping_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2ShopIdMapping_argsStandardScheme getScheme() {
        return new getShopUUID2ShopIdMapping_argsStandardScheme();
      }
    }

    private static class getShopUUID2ShopIdMapping_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopUUID2ShopIdMapping_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopUUID2ShopIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ARG0
              if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                {
                  org.apache.thrift.protocol.TSet _set28 = iprot.readSetBegin();
                  struct.arg0 = new java.util.HashSet<java.lang.String>(2*_set28.size);
                  java.lang.String _elem29;
                  for (int _i30 = 0; _i30 < _set28.size; ++_i30)
                  {
                    _elem29 = iprot.readString();
                    struct.arg0.add(_elem29);
                  }
                  iprot.readSetEnd();
                }
                struct.setArg0IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopUUID2ShopIdMapping_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.arg0 != null) {
          oprot.writeFieldBegin(ARG0_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.arg0.size()));
            for (java.lang.String _iter31 : struct.arg0)
            {
              oprot.writeString(_iter31);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopUUID2ShopIdMapping_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2ShopIdMapping_argsTupleScheme getScheme() {
        return new getShopUUID2ShopIdMapping_argsTupleScheme();
      }
    }

    private static class getShopUUID2ShopIdMapping_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopUUID2ShopIdMapping_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopUUID2ShopIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetArg0()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetArg0()) {
          {
            oprot.writeI32(struct.arg0.size());
            for (java.lang.String _iter32 : struct.arg0)
            {
              oprot.writeString(_iter32);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopUUID2ShopIdMapping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TSet _set33 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.arg0 = new java.util.HashSet<java.lang.String>(2*_set33.size);
            java.lang.String _elem34;
            for (int _i35 = 0; _i35 < _set33.size; ++_i35)
            {
              _elem34 = iprot.readString();
              struct.arg0.add(_elem34);
            }
          }
          struct.setArg0IsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getShopUUID2ShopIdMapping_result implements org.apache.thrift.TBase<getShopUUID2ShopIdMapping_result, getShopUUID2ShopIdMapping_result._Fields>, java.io.Serializable, Cloneable, Comparable<getShopUUID2ShopIdMapping_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getShopUUID2ShopIdMapping_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getShopUUID2ShopIdMapping_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getShopUUID2ShopIdMapping_resultTupleSchemeFactory();

    public TGetShopUUID2ShopIdResponse success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TGetShopUUID2ShopIdResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getShopUUID2ShopIdMapping_result.class, metaDataMap);
    }

    public getShopUUID2ShopIdMapping_result() {
    }

    public getShopUUID2ShopIdMapping_result(
      TGetShopUUID2ShopIdResponse success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getShopUUID2ShopIdMapping_result(getShopUUID2ShopIdMapping_result other) {
      if (other.isSetSuccess()) {
        this.success = new TGetShopUUID2ShopIdResponse(other.success);
      }
    }

    public getShopUUID2ShopIdMapping_result deepCopy() {
      return new getShopUUID2ShopIdMapping_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TGetShopUUID2ShopIdResponse getSuccess() {
      return this.success;
    }

    public getShopUUID2ShopIdMapping_result setSuccess(TGetShopUUID2ShopIdResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TGetShopUUID2ShopIdResponse)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getShopUUID2ShopIdMapping_result)
        return this.equals((getShopUUID2ShopIdMapping_result)that);
      return false;
    }

    public boolean equals(getShopUUID2ShopIdMapping_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getShopUUID2ShopIdMapping_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getShopUUID2ShopIdMapping_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getShopUUID2ShopIdMapping_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2ShopIdMapping_resultStandardScheme getScheme() {
        return new getShopUUID2ShopIdMapping_resultStandardScheme();
      }
    }

    private static class getShopUUID2ShopIdMapping_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getShopUUID2ShopIdMapping_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getShopUUID2ShopIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TGetShopUUID2ShopIdResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getShopUUID2ShopIdMapping_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getShopUUID2ShopIdMapping_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getShopUUID2ShopIdMapping_resultTupleScheme getScheme() {
        return new getShopUUID2ShopIdMapping_resultTupleScheme();
      }
    }

    private static class getShopUUID2ShopIdMapping_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getShopUUID2ShopIdMapping_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getShopUUID2ShopIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getShopUUID2ShopIdMapping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TGetShopUUID2ShopIdResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
